#!/usr/bin/perl
# vim: ft=perl:fdm=marker:fmr=#<,#>:fen:et:sw=2:
# abstract: perl weather client
use strict;
use warnings FATAL => 'all';
use vars     qw($VERSION);
use autodie  qw(:all);

my $APP  = 'pwc';
$VERSION = '0.001';

use Data::Dumper;

{
  package Data::Dumper;
  no strict 'vars';
  $Terse = $Indent = $Useqq = $Deparse = $Sortkeys = 1;
  $Quotekeys = 0;
}

use LWP::Simple;
use JSON::XS;
use Term::ExtendedColor qw(fg bold);

my $location = shift || 'karlstad';
my $api_key  = '85a4e3c55b73909f42c6a23ec35b7147';
my $base_url = "http://api.openweathermap.org/data/2.5/weather?q=$location&appid=$api_key&units=metric";


my $weather = decode_json( get($base_url) );

my $current_temp = $weather->{main}->{temp};
my $current_town = $weather->{name};
my $current_cond = $weather->{weather}->[0]->{main};

pwc_print();

sub pwc_print {
  $current_cond = lc $current_cond;
  $current_cond =~ s/(rain|snow)/$1ing/;
  printf "%s: %dÂ°C and %s%s\n",
    bold($current_town), $current_temp, $current_cond,
    ($current_cond =~ m/(?:rain|snow)/) ? ' :( ' : '';
}

__END__


=pod

=head1 NAME

perl weather client

=head1 USAGE

=head1 DESCRIPTION

=head1 OPTIONS

=head1 REPORTING BUGS

Report bugs and/or feature requests on rt.cpan.org, the repository issue tracker
or directly to L<m@japh.se>

=head1 AUTHOR

  Magnus Woldrich
  CPAN ID: WOLDRICH
  m@japh.se
  L<~/|http://japh.se>
  L<git|http://github.com/trapd00r>

=head1 CONTRIBUTORS

None required yet.

=head1 COPYRIGHT

Copyright 2019- B<THIS APPLICATION>s L</AUTHOR> and L</CONTRIBUTORS> as listed
above.

=head1 LICENSE

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=head1 SEE ALSO

L<~/|http://japh.se>

=cut

